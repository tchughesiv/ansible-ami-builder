---
- name: Add the Docker group
  group:
    name: docker
    state: present
  become: true

- name: Add ec2-user to the Docker group
  user:
    name: ec2-user
    groups: docker
  become: true

- name: Restart Docker
  service:
    name: docker
    state: restarted
  become: true

#- name: Start firewalld
#  service:
#    name: firewalld
#    state: restarted
#  become: true

#- name: Create the firewalld dockerc zone
#  command: firewall-cmd --permanent --new-zone dockerc

#- name: Reload the firewalld dockerc zone
#  command: firewall-cmd --reload

#- name: configure firewalld dockerc zone
#  firewalld:
#    zone: dockerc
#    source: 172.17.0.0/16
#    permanent: true
#    state: enabled
#  become: true

#- name: Add tcp ports to dockerc zone
#  firewalld:
#    port: "{{ item }}"
#    permanent: true
#    state: enabled
#  with_items:
#    - 8443/tcp
#  become: true

#- name: Add udp ports to dockerc zone
#  firewalld:
#    zone: dockerc
#    port: "{{ item }}"
#    permanent: true
#    state: enabled
#  with_items:
#    - 53/udp
#    - 8053/udp
#  become: true

#- name: Add tcp ports to public zone
#  firewalld:
#    zone: public
#    port: "{{ item }}"
#    permanent: true
#    state: enabled
#  with_items:
#    - 8443/tcp
#    - 80/tcp
#    - 53/tcp
#    - 443/tcp
#    - 2379/tcp
#    - 2380/tcp
#    - 8053/tcp
#    - 8443/tcp
#    - 8444/tcp
#    - 10250/tcp
#  become: true

#- name: Add udp ports to public zone
#  firewalld:
#    zone: public
#    state: enabled
#    permanent: true
#    port: "{{ item }}"
#  with_items:
#    - 53/udp
#    - 4789/udp
#    - 8053/udp
#  become: true

#- name: Reload firewalld
#  systemd:
#    name: firewalld
#    state: reloaded
#  become: true

- name: Configure sysctl
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes
  become: true

- name: Download OC startup scripts
  get_url:
    url: "https://raw.githubusercontent.com/dustymabe/summit-2018-container-lab/master/scripts/host/{{ item }}"
    dest: "/home/ec2-user/{{ item }}"
    owner: ec2-user
    group: ec2-user
    mode: 0755
  with_items:
    - start-oc.sh
    - cleanup-oc.sh
  become: true

- name: copy over the registries file
  copy:
    src: registries.conf
    dest: /etc/containers/registries.conf
  become: true

- name: Restart Docker
  service:
    name: docker
    state: restarted
    enabled: yes
  become: true

- name: Run the script and cache the images
  shell: /home/ec2-user/start-oc.sh
  async: 600
  poll: 0
  register: start_oc

- name: Grab podman and builda repos
  get_url:
    url: "{{ repo_crio }}"
    dest: /etc/yum.repos.d/builda.repo

- name: Install podman and buildah
  yum:
    name: "{{ item }}"
    state: present
  with_items: 
    - podman-0.4.4-git9b457e3.el7.centos
    - buildah-0.16-git83d7d10.el7.centos

- name: Check on image cache task
  async_status: jid={{ start_oc.ansible_job_id }}
  register: cache_result
  until: cache_result.finished
  retries: 300

- name: Cleanup
  shell: /home/ec2-user/cleanup-oc.sh
  ignore_errors: True
...
